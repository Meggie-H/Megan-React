/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as AuthenticatedImport } from './routes/_authenticated';
import { Route as AuthenticatedUsernameReposImport } from './routes/_authenticated/$username.repos';
import { Route as AuthenticatedUsernameRepoDashboardImport } from './routes/_authenticated/$username.$repo.dashboard';
import { Route as AuthenticatedUsernameRepoDashboardStatsImport } from './routes/_authenticated/$username.$repo.dashboard.stats';
import { Route as AuthenticatedUsernameRepoDashboardGitTreeImport } from './routes/_authenticated/$username.$repo.dashboard.git-tree';
import { Route as AuthenticatedUsernameRepoDashboardCommitsImport } from './routes/_authenticated/$username.$repo.dashboard.commits';

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')();

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any);

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

const AuthenticatedUsernameReposRoute = AuthenticatedUsernameReposImport.update(
  {
    path: '/$username/repos',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
);

const AuthenticatedUsernameRepoDashboardRoute =
  AuthenticatedUsernameRepoDashboardImport.update({
    path: '/$username/$repo/dashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any);

const AuthenticatedUsernameRepoDashboardStatsRoute =
  AuthenticatedUsernameRepoDashboardStatsImport.update({
    path: '/stats',
    getParentRoute: () => AuthenticatedUsernameRepoDashboardRoute,
  } as any);

const AuthenticatedUsernameRepoDashboardGitTreeRoute =
  AuthenticatedUsernameRepoDashboardGitTreeImport.update({
    path: '/git-tree',
    getParentRoute: () => AuthenticatedUsernameRepoDashboardRoute,
  } as any);

const AuthenticatedUsernameRepoDashboardCommitsRoute =
  AuthenticatedUsernameRepoDashboardCommitsImport.update({
    path: '/commits',
    getParentRoute: () => AuthenticatedUsernameRepoDashboardRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport;
      parentRoute: typeof rootRoute;
    };
    '/_authenticated/$username/repos': {
      preLoaderRoute: typeof AuthenticatedUsernameReposImport;
      parentRoute: typeof AuthenticatedImport;
    };
    '/_authenticated/$username/$repo/dashboard': {
      preLoaderRoute: typeof AuthenticatedUsernameRepoDashboardImport;
      parentRoute: typeof AuthenticatedImport;
    };
    '/_authenticated/$username/$repo/dashboard/commits': {
      preLoaderRoute: typeof AuthenticatedUsernameRepoDashboardCommitsImport;
      parentRoute: typeof AuthenticatedUsernameRepoDashboardImport;
    };
    '/_authenticated/$username/$repo/dashboard/git-tree': {
      preLoaderRoute: typeof AuthenticatedUsernameRepoDashboardGitTreeImport;
      parentRoute: typeof AuthenticatedUsernameRepoDashboardImport;
    };
    '/_authenticated/$username/$repo/dashboard/stats': {
      preLoaderRoute: typeof AuthenticatedUsernameRepoDashboardStatsImport;
      parentRoute: typeof AuthenticatedUsernameRepoDashboardImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AuthenticatedRoute.addChildren([
    AuthenticatedUsernameReposRoute,
    AuthenticatedUsernameRepoDashboardRoute.addChildren([
      AuthenticatedUsernameRepoDashboardCommitsRoute,
      AuthenticatedUsernameRepoDashboardGitTreeRoute,
      AuthenticatedUsernameRepoDashboardStatsRoute,
    ]),
  ]),
]);

/* prettier-ignore-end */
